"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@date-fns";
exports.ids = ["vendor-chunks/@date-fns"];
exports.modules = {

/***/ "(ssr)/./node_modules/@date-fns/tz/constants/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@date-fns/tz/constants/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   constructFromSymbol: () => (/* binding */ constructFromSymbol)\n/* harmony export */ });\n/**\n * The symbol to access the `TZDate`'s function to construct a new instance from\n * the provided value. It helps date-fns to inherit the time zone.\n */\nconst constructFromSymbol = Symbol.for(\"constructDateFrom\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L2NvbnN0YW50cy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDTyIsInNvdXJjZXMiOlsiVzpcXFZpc3VhbCBTdHVkaW8gQ29kZVxcV2ViIHNheXRsYXJcXFV6V2F5LVR1cml6bVxcZnJvbnRlbmRcXG5vZGVfbW9kdWxlc1xcQGRhdGUtZm5zXFx0elxcY29uc3RhbnRzXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoZSBzeW1ib2wgdG8gYWNjZXNzIHRoZSBgVFpEYXRlYCdzIGZ1bmN0aW9uIHRvIGNvbnN0cnVjdCBhIG5ldyBpbnN0YW5jZSBmcm9tXG4gKiB0aGUgcHJvdmlkZWQgdmFsdWUuIEl0IGhlbHBzIGRhdGUtZm5zIHRvIGluaGVyaXQgdGhlIHRpbWUgem9uZS5cbiAqL1xuZXhwb3J0IGNvbnN0IGNvbnN0cnVjdEZyb21TeW1ib2wgPSBTeW1ib2wuZm9yKFwiY29uc3RydWN0RGF0ZUZyb21cIik7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@date-fns/tz/constants/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@date-fns/tz/date/index.js":
/*!*************************************************!*\
  !*** ./node_modules/@date-fns/tz/date/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TZDate: () => (/* binding */ TZDate)\n/* harmony export */ });\n/* harmony import */ var _tzName_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tzName/index.js */ \"(ssr)/./node_modules/@date-fns/tz/tzName/index.js\");\n/* harmony import */ var _mini_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mini.js */ \"(ssr)/./node_modules/@date-fns/tz/date/mini.js\");\n\n\n\n/**\n * UTC date class. It maps getters and setters to corresponding UTC methods,\n * forcing all calculations in the UTC time zone.\n *\n * Combined with date-fns, it allows using the class the same way as\n * the original date class.\n *\n * This complete version provides not only getters, setters,\n * and `getTimezoneOffset`, but also the formatter functions, mirroring\n * all original `Date` functionality. Use this version when you need to format\n * a string or in an environment you don't fully control (a library).\n * For a minimal version, see `UTCDateMini`.\n */\nclass TZDate extends _mini_js__WEBPACK_IMPORTED_MODULE_1__.TZDateMini {\n  //#region static\n\n  static tz(tz, ...args) {\n    return args.length ? new TZDate(...args, tz) : new TZDate(Date.now(), tz);\n  }\n\n  //#endregion\n\n  //#region representation\n\n  toISOString() {\n    const [sign, hours, minutes] = this.tzComponents();\n    const tz = `${sign}${hours}:${minutes}`;\n    return this.internal.toISOString().slice(0, -1) + tz;\n  }\n  toString() {\n    // \"Tue Aug 13 2024 07:50:19 GMT+0800 (Singapore Standard Time)\";\n    return `${this.toDateString()} ${this.toTimeString()}`;\n  }\n  toDateString() {\n    // toUTCString returns RFC 7231 (\"Mon, 12 Aug 2024 23:36:08 GMT\")\n    const [day, date, month, year] = this.internal.toUTCString().split(\" \");\n    // \"Tue Aug 13 2024\"\n    return `${day?.slice(0, -1) /* Remove \",\" */} ${month} ${date} ${year}`;\n  }\n  toTimeString() {\n    // toUTCString returns RFC 7231 (\"Mon, 12 Aug 2024 23:36:08 GMT\")\n    const time = this.internal.toUTCString().split(\" \")[4];\n    const [sign, hours, minutes] = this.tzComponents();\n    // \"07:42:23 GMT+0800 (Singapore Standard Time)\"\n    return `${time} GMT${sign}${hours}${minutes} (${(0,_tzName_index_js__WEBPACK_IMPORTED_MODULE_0__.tzName)(this.timeZone, this)})`;\n  }\n  toLocaleString(locales, options) {\n    return Date.prototype.toLocaleString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n  toLocaleDateString(locales, options) {\n    return Date.prototype.toLocaleDateString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n  toLocaleTimeString(locales, options) {\n    return Date.prototype.toLocaleTimeString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n\n  //#endregion\n\n  //#region private\n\n  tzComponents() {\n    const offset = this.getTimezoneOffset();\n    const sign = offset > 0 ? \"-\" : \"+\";\n    const hours = String(Math.floor(Math.abs(offset) / 60)).padStart(2, \"0\");\n    const minutes = String(Math.abs(offset) % 60).padStart(2, \"0\");\n    return [sign, hours, minutes];\n  }\n\n  //#endregion\n\n  withTimeZone(timeZone) {\n    return new TZDate(+this, timeZone);\n  }\n\n  //#region date-fns integration\n\n  [Symbol.for(\"constructDateFrom\")](date) {\n    return new TZDate(+new Date(date), this.timeZone);\n  }\n\n  //#endregion\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L2RhdGUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRDO0FBQ0w7O0FBRXZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08scUJBQXFCLGdEQUFVO0FBQ3RDOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCLEtBQUssRUFBRSxNQUFNLEdBQUcsUUFBUTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMscUJBQXFCLEVBQUUsb0JBQW9CO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLG9DQUFvQyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsS0FBSztBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLE1BQU0sS0FBSyxLQUFLLEVBQUUsTUFBTSxFQUFFLFNBQVMsR0FBRyx3REFBTSxzQkFBc0I7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJXOlxcVmlzdWFsIFN0dWRpbyBDb2RlXFxXZWIgc2F5dGxhclxcVXpXYXktVHVyaXptXFxmcm9udGVuZFxcbm9kZV9tb2R1bGVzXFxAZGF0ZS1mbnNcXHR6XFxkYXRlXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0ek5hbWUgfSBmcm9tIFwiLi4vdHpOYW1lL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBUWkRhdGVNaW5pIH0gZnJvbSBcIi4vbWluaS5qc1wiO1xuXG4vKipcbiAqIFVUQyBkYXRlIGNsYXNzLiBJdCBtYXBzIGdldHRlcnMgYW5kIHNldHRlcnMgdG8gY29ycmVzcG9uZGluZyBVVEMgbWV0aG9kcyxcbiAqIGZvcmNpbmcgYWxsIGNhbGN1bGF0aW9ucyBpbiB0aGUgVVRDIHRpbWUgem9uZS5cbiAqXG4gKiBDb21iaW5lZCB3aXRoIGRhdGUtZm5zLCBpdCBhbGxvd3MgdXNpbmcgdGhlIGNsYXNzIHRoZSBzYW1lIHdheSBhc1xuICogdGhlIG9yaWdpbmFsIGRhdGUgY2xhc3MuXG4gKlxuICogVGhpcyBjb21wbGV0ZSB2ZXJzaW9uIHByb3ZpZGVzIG5vdCBvbmx5IGdldHRlcnMsIHNldHRlcnMsXG4gKiBhbmQgYGdldFRpbWV6b25lT2Zmc2V0YCwgYnV0IGFsc28gdGhlIGZvcm1hdHRlciBmdW5jdGlvbnMsIG1pcnJvcmluZ1xuICogYWxsIG9yaWdpbmFsIGBEYXRlYCBmdW5jdGlvbmFsaXR5LiBVc2UgdGhpcyB2ZXJzaW9uIHdoZW4geW91IG5lZWQgdG8gZm9ybWF0XG4gKiBhIHN0cmluZyBvciBpbiBhbiBlbnZpcm9ubWVudCB5b3UgZG9uJ3QgZnVsbHkgY29udHJvbCAoYSBsaWJyYXJ5KS5cbiAqIEZvciBhIG1pbmltYWwgdmVyc2lvbiwgc2VlIGBVVENEYXRlTWluaWAuXG4gKi9cbmV4cG9ydCBjbGFzcyBUWkRhdGUgZXh0ZW5kcyBUWkRhdGVNaW5pIHtcbiAgLy8jcmVnaW9uIHN0YXRpY1xuXG4gIHN0YXRpYyB0eih0eiwgLi4uYXJncykge1xuICAgIHJldHVybiBhcmdzLmxlbmd0aCA/IG5ldyBUWkRhdGUoLi4uYXJncywgdHopIDogbmV3IFRaRGF0ZShEYXRlLm5vdygpLCB0eik7XG4gIH1cblxuICAvLyNlbmRyZWdpb25cblxuICAvLyNyZWdpb24gcmVwcmVzZW50YXRpb25cblxuICB0b0lTT1N0cmluZygpIHtcbiAgICBjb25zdCBbc2lnbiwgaG91cnMsIG1pbnV0ZXNdID0gdGhpcy50ekNvbXBvbmVudHMoKTtcbiAgICBjb25zdCB0eiA9IGAke3NpZ259JHtob3Vyc306JHttaW51dGVzfWA7XG4gICAgcmV0dXJuIHRoaXMuaW50ZXJuYWwudG9JU09TdHJpbmcoKS5zbGljZSgwLCAtMSkgKyB0ejtcbiAgfVxuICB0b1N0cmluZygpIHtcbiAgICAvLyBcIlR1ZSBBdWcgMTMgMjAyNCAwNzo1MDoxOSBHTVQrMDgwMCAoU2luZ2Fwb3JlIFN0YW5kYXJkIFRpbWUpXCI7XG4gICAgcmV0dXJuIGAke3RoaXMudG9EYXRlU3RyaW5nKCl9ICR7dGhpcy50b1RpbWVTdHJpbmcoKX1gO1xuICB9XG4gIHRvRGF0ZVN0cmluZygpIHtcbiAgICAvLyB0b1VUQ1N0cmluZyByZXR1cm5zIFJGQyA3MjMxIChcIk1vbiwgMTIgQXVnIDIwMjQgMjM6MzY6MDggR01UXCIpXG4gICAgY29uc3QgW2RheSwgZGF0ZSwgbW9udGgsIHllYXJdID0gdGhpcy5pbnRlcm5hbC50b1VUQ1N0cmluZygpLnNwbGl0KFwiIFwiKTtcbiAgICAvLyBcIlR1ZSBBdWcgMTMgMjAyNFwiXG4gICAgcmV0dXJuIGAke2RheT8uc2xpY2UoMCwgLTEpIC8qIFJlbW92ZSBcIixcIiAqL30gJHttb250aH0gJHtkYXRlfSAke3llYXJ9YDtcbiAgfVxuICB0b1RpbWVTdHJpbmcoKSB7XG4gICAgLy8gdG9VVENTdHJpbmcgcmV0dXJucyBSRkMgNzIzMSAoXCJNb24sIDEyIEF1ZyAyMDI0IDIzOjM2OjA4IEdNVFwiKVxuICAgIGNvbnN0IHRpbWUgPSB0aGlzLmludGVybmFsLnRvVVRDU3RyaW5nKCkuc3BsaXQoXCIgXCIpWzRdO1xuICAgIGNvbnN0IFtzaWduLCBob3VycywgbWludXRlc10gPSB0aGlzLnR6Q29tcG9uZW50cygpO1xuICAgIC8vIFwiMDc6NDI6MjMgR01UKzA4MDAgKFNpbmdhcG9yZSBTdGFuZGFyZCBUaW1lKVwiXG4gICAgcmV0dXJuIGAke3RpbWV9IEdNVCR7c2lnbn0ke2hvdXJzfSR7bWludXRlc30gKCR7dHpOYW1lKHRoaXMudGltZVpvbmUsIHRoaXMpfSlgO1xuICB9XG4gIHRvTG9jYWxlU3RyaW5nKGxvY2FsZXMsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gRGF0ZS5wcm90b3R5cGUudG9Mb2NhbGVTdHJpbmcuY2FsbCh0aGlzLCBsb2NhbGVzLCB7XG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgdGltZVpvbmU6IG9wdGlvbnM/LnRpbWVab25lIHx8IHRoaXMudGltZVpvbmVcbiAgICB9KTtcbiAgfVxuICB0b0xvY2FsZURhdGVTdHJpbmcobG9jYWxlcywgb3B0aW9ucykge1xuICAgIHJldHVybiBEYXRlLnByb3RvdHlwZS50b0xvY2FsZURhdGVTdHJpbmcuY2FsbCh0aGlzLCBsb2NhbGVzLCB7XG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgdGltZVpvbmU6IG9wdGlvbnM/LnRpbWVab25lIHx8IHRoaXMudGltZVpvbmVcbiAgICB9KTtcbiAgfVxuICB0b0xvY2FsZVRpbWVTdHJpbmcobG9jYWxlcywgb3B0aW9ucykge1xuICAgIHJldHVybiBEYXRlLnByb3RvdHlwZS50b0xvY2FsZVRpbWVTdHJpbmcuY2FsbCh0aGlzLCBsb2NhbGVzLCB7XG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgdGltZVpvbmU6IG9wdGlvbnM/LnRpbWVab25lIHx8IHRoaXMudGltZVpvbmVcbiAgICB9KTtcbiAgfVxuXG4gIC8vI2VuZHJlZ2lvblxuXG4gIC8vI3JlZ2lvbiBwcml2YXRlXG5cbiAgdHpDb21wb25lbnRzKCkge1xuICAgIGNvbnN0IG9mZnNldCA9IHRoaXMuZ2V0VGltZXpvbmVPZmZzZXQoKTtcbiAgICBjb25zdCBzaWduID0gb2Zmc2V0ID4gMCA/IFwiLVwiIDogXCIrXCI7XG4gICAgY29uc3QgaG91cnMgPSBTdHJpbmcoTWF0aC5mbG9vcihNYXRoLmFicyhvZmZzZXQpIC8gNjApKS5wYWRTdGFydCgyLCBcIjBcIik7XG4gICAgY29uc3QgbWludXRlcyA9IFN0cmluZyhNYXRoLmFicyhvZmZzZXQpICUgNjApLnBhZFN0YXJ0KDIsIFwiMFwiKTtcbiAgICByZXR1cm4gW3NpZ24sIGhvdXJzLCBtaW51dGVzXTtcbiAgfVxuXG4gIC8vI2VuZHJlZ2lvblxuXG4gIHdpdGhUaW1lWm9uZSh0aW1lWm9uZSkge1xuICAgIHJldHVybiBuZXcgVFpEYXRlKCt0aGlzLCB0aW1lWm9uZSk7XG4gIH1cblxuICAvLyNyZWdpb24gZGF0ZS1mbnMgaW50ZWdyYXRpb25cblxuICBbU3ltYm9sLmZvcihcImNvbnN0cnVjdERhdGVGcm9tXCIpXShkYXRlKSB7XG4gICAgcmV0dXJuIG5ldyBUWkRhdGUoK25ldyBEYXRlKGRhdGUpLCB0aGlzLnRpbWVab25lKTtcbiAgfVxuXG4gIC8vI2VuZHJlZ2lvblxufSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@date-fns/tz/date/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@date-fns/tz/date/mini.js":
/*!************************************************!*\
  !*** ./node_modules/@date-fns/tz/date/mini.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TZDateMini: () => (/* binding */ TZDateMini)\n/* harmony export */ });\n/* harmony import */ var _tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tzOffset/index.js */ \"(ssr)/./node_modules/@date-fns/tz/tzOffset/index.js\");\n\nclass TZDateMini extends Date {\n  //#region static\n\n  constructor(...args) {\n    super();\n    if (args.length > 1 && typeof args[args.length - 1] === \"string\") {\n      this.timeZone = args.pop();\n    }\n    this.internal = new Date();\n    if (isNaN((0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(this.timeZone, this))) {\n      this.setTime(NaN);\n    } else {\n      if (!args.length) {\n        this.setTime(Date.now());\n      } else if (typeof args[0] === \"number\" && (args.length === 1 || args.length === 2 && typeof args[1] !== \"number\")) {\n        this.setTime(args[0]);\n      } else if (typeof args[0] === \"string\") {\n        this.setTime(+new Date(args[0]));\n      } else if (args[0] instanceof Date) {\n        this.setTime(+args[0]);\n      } else {\n        this.setTime(+new Date(...args));\n        adjustToSystemTZ(this, NaN);\n        syncToInternal(this);\n      }\n    }\n  }\n  static tz(tz, ...args) {\n    return args.length ? new TZDateMini(...args, tz) : new TZDateMini(Date.now(), tz);\n  }\n\n  //#endregion\n\n  //#region time zone\n\n  withTimeZone(timeZone) {\n    return new TZDateMini(+this, timeZone);\n  }\n  getTimezoneOffset() {\n    return -(0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(this.timeZone, this);\n  }\n\n  //#endregion\n\n  //#region time\n\n  setTime(time) {\n    Date.prototype.setTime.apply(this, arguments);\n    syncToInternal(this);\n    return +this;\n  }\n\n  //#endregion\n\n  //#region date-fns integration\n\n  [Symbol.for(\"constructDateFrom\")](date) {\n    return new TZDateMini(+new Date(date), this.timeZone);\n  }\n\n  //#endregion\n}\n\n// Assign getters and setters\nconst re = /^(get|set)(?!UTC)/;\nObject.getOwnPropertyNames(Date.prototype).forEach(method => {\n  if (!re.test(method)) return;\n  const utcMethod = method.replace(re, \"$1UTC\");\n  // Filter out methods without UTC counterparts\n  if (!TZDateMini.prototype[utcMethod]) return;\n  if (method.startsWith(\"get\")) {\n    // Delegate to internal date's UTC method\n    TZDateMini.prototype[method] = function () {\n      return this.internal[utcMethod]();\n    };\n  } else {\n    // Assign regular setter\n    TZDateMini.prototype[method] = function () {\n      Date.prototype[utcMethod].apply(this.internal, arguments);\n      syncFromInternal(this);\n      return +this;\n    };\n\n    // Assign UTC setter\n    TZDateMini.prototype[utcMethod] = function () {\n      Date.prototype[utcMethod].apply(this, arguments);\n      syncToInternal(this);\n      return +this;\n    };\n  }\n});\n\n/**\n * Function syncs time to internal date, applying the time zone offset.\n *\n * @param {Date} date - Date to sync\n */\nfunction syncToInternal(date) {\n  date.internal.setTime(+date);\n  date.internal.setUTCMinutes(date.internal.getUTCMinutes() - date.getTimezoneOffset());\n}\n\n/**\n * Function syncs the internal date UTC values to the date. It allows to get\n * accurate timestamp value.\n *\n * @param {Date} date - The date to sync\n */\nfunction syncFromInternal(date) {\n  // First we transpose the internal values\n  Date.prototype.setFullYear.call(date, date.internal.getUTCFullYear(), date.internal.getUTCMonth(), date.internal.getUTCDate());\n  Date.prototype.setHours.call(date, date.internal.getUTCHours(), date.internal.getUTCMinutes(), date.internal.getUTCSeconds(), date.internal.getUTCMilliseconds());\n\n  // Now we have to adjust the date to the system time zone\n  adjustToSystemTZ(date);\n}\n\n/**\n * Function adjusts the date to the system time zone. It uses the time zone\n * differences to calculate the offset and adjust the date.\n *\n * @param {Date} date - Date to adjust\n */\nfunction adjustToSystemTZ(date) {\n  // Save the time zone offset before all the adjustments\n  const offset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(date.timeZone, date);\n\n  //#region System DST adjustment\n\n  // The biggest problem with using the system time zone is that when we create\n  // a date from internal values stored in UTC, the system time zone might end\n  // up on the DST hour:\n  //\n  //   $ TZ=America/New_York node\n  //   > new Date(2020, 2, 8, 1).toString()\n  //   'Sun Mar 08 2020 01:00:00 GMT-0500 (Eastern Standard Time)'\n  //   > new Date(2020, 2, 8, 2).toString()\n  //   'Sun Mar 08 2020 03:00:00 GMT-0400 (Eastern Daylight Time)'\n  //   > new Date(2020, 2, 8, 3).toString()\n  //   'Sun Mar 08 2020 03:00:00 GMT-0400 (Eastern Daylight Time)'\n  //   > new Date(2020, 2, 8, 4).toString()\n  //   'Sun Mar 08 2020 04:00:00 GMT-0400 (Eastern Daylight Time)'\n  //\n  // Here we get the same hour for both 2 and 3, because the system time zone\n  // has DST beginning at 8 March 2020, 2 a.m. and jumps to 3 a.m. So we have\n  // to adjust the internal date to reflect that.\n  //\n  // However we want to adjust only if that's the DST hour the change happenes,\n  // not the hour where DST moves to.\n\n  // We calculate the previous hour to see if the time zone offset has changed\n  // and we have landed on the DST hour.\n  const prevHour = new Date(+date);\n  // We use UTC methods here as we don't want to land on the same hour again\n  // in case of DST.\n  prevHour.setUTCHours(prevHour.getUTCHours() - 1);\n\n  // Calculate if we are on the system DST hour.\n  const systemOffset = -new Date(+date).getTimezoneOffset();\n  const prevHourSystemOffset = -new Date(+prevHour).getTimezoneOffset();\n  const systemDSTChange = systemOffset - prevHourSystemOffset;\n  // Detect the DST shift. System DST change will occur both on\n  const dstShift = Date.prototype.getHours.apply(date) !== date.internal.getUTCHours();\n\n  // Move the internal date when we are on the system DST hour.\n  if (systemDSTChange && dstShift) date.internal.setUTCMinutes(date.internal.getUTCMinutes() + systemDSTChange);\n\n  //#endregion\n\n  //#region System diff adjustment\n\n  // Now we need to adjust the date, since we just applied internal values.\n  // We need to calculate the difference between the system and date time zones\n  // and apply it to the date.\n\n  const offsetDiff = systemOffset - offset;\n  if (offsetDiff) Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + offsetDiff);\n\n  //#endregion\n\n  //#region Post-adjustment DST fix\n\n  const postOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(date.timeZone, date);\n  const postSystemOffset = -new Date(+date).getTimezoneOffset();\n  const postOffsetDiff = postSystemOffset - postOffset;\n  const offsetChanged = postOffset !== offset;\n  const postDiff = postOffsetDiff - offsetDiff;\n  if (offsetChanged && postDiff) {\n    Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + postDiff);\n\n    // Now we need to check if got offset change during the post-adjustment.\n    // If so, we also need both dates to reflect that.\n\n    const newOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(date.timeZone, date);\n    const offsetChange = postOffset - newOffset;\n    if (offsetChange) {\n      date.internal.setUTCMinutes(date.internal.getUTCMinutes() + offsetChange);\n      Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + offsetChange);\n    }\n  }\n\n  //#endregion\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@date-fns/tz/date/mini.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@date-fns/tz/index.js":
/*!********************************************!*\
  !*** ./node_modules/@date-fns/tz/index.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TZDate: () => (/* reexport safe */ _date_index_js__WEBPACK_IMPORTED_MODULE_1__.TZDate),\n/* harmony export */   TZDateMini: () => (/* reexport safe */ _date_mini_js__WEBPACK_IMPORTED_MODULE_2__.TZDateMini),\n/* harmony export */   constructFromSymbol: () => (/* reexport safe */ _constants_index_js__WEBPACK_IMPORTED_MODULE_0__.constructFromSymbol),\n/* harmony export */   tz: () => (/* reexport safe */ _tz_index_js__WEBPACK_IMPORTED_MODULE_3__.tz),\n/* harmony export */   tzName: () => (/* reexport safe */ _tzName_index_js__WEBPACK_IMPORTED_MODULE_6__.tzName),\n/* harmony export */   tzOffset: () => (/* reexport safe */ _tzOffset_index_js__WEBPACK_IMPORTED_MODULE_4__.tzOffset),\n/* harmony export */   tzScan: () => (/* reexport safe */ _tzScan_index_js__WEBPACK_IMPORTED_MODULE_5__.tzScan)\n/* harmony export */ });\n/* harmony import */ var _constants_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants/index.js */ \"(ssr)/./node_modules/@date-fns/tz/constants/index.js\");\n/* harmony import */ var _date_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./date/index.js */ \"(ssr)/./node_modules/@date-fns/tz/date/index.js\");\n/* harmony import */ var _date_mini_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./date/mini.js */ \"(ssr)/./node_modules/@date-fns/tz/date/mini.js\");\n/* harmony import */ var _tz_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tz/index.js */ \"(ssr)/./node_modules/@date-fns/tz/tz/index.js\");\n/* harmony import */ var _tzOffset_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tzOffset/index.js */ \"(ssr)/./node_modules/@date-fns/tz/tzOffset/index.js\");\n/* harmony import */ var _tzScan_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tzScan/index.js */ \"(ssr)/./node_modules/@date-fns/tz/tzScan/index.js\");\n/* harmony import */ var _tzName_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tzName/index.js */ \"(ssr)/./node_modules/@date-fns/tz/tzName/index.js\");\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXFDO0FBQ0w7QUFDRDtBQUNEO0FBQ007QUFDRiIsInNvdXJjZXMiOlsiVzpcXFZpc3VhbCBTdHVkaW8gQ29kZVxcV2ViIHNheXRsYXJcXFV6V2F5LVR1cml6bVxcZnJvbnRlbmRcXG5vZGVfbW9kdWxlc1xcQGRhdGUtZm5zXFx0elxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vY29uc3RhbnRzL2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9kYXRlL2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9kYXRlL21pbmkuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3R6L2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi90ek9mZnNldC9pbmRleC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdHpTY2FuL2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi90ek5hbWUvaW5kZXguanNcIjsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@date-fns/tz/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@date-fns/tz/tz/index.js":
/*!***********************************************!*\
  !*** ./node_modules/@date-fns/tz/tz/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tz: () => (/* binding */ tz)\n/* harmony export */ });\n/* harmony import */ var _date_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../date/index.js */ \"(ssr)/./node_modules/@date-fns/tz/date/index.js\");\n\n\n/**\n * The function creates accepts a time zone and returns a function that creates\n * a new `TZDate` instance in the time zone from the provided value. Use it to\n * provide the context for the date-fns functions, via the `in` option.\n *\n * @param timeZone - Time zone name (IANA or UTC offset)\n *\n * @returns Function that creates a new `TZDate` instance in the time zone\n */\nconst tz = timeZone => value => _date_index_js__WEBPACK_IMPORTED_MODULE_0__.TZDate.tz(timeZone, +new Date(value));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L3R6L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBDOztBQUUxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxnQ0FBZ0Msa0RBQU0iLCJzb3VyY2VzIjpbIlc6XFxWaXN1YWwgU3R1ZGlvIENvZGVcXFdlYiBzYXl0bGFyXFxVeldheS1UdXJpem1cXGZyb250ZW5kXFxub2RlX21vZHVsZXNcXEBkYXRlLWZuc1xcdHpcXHR6XFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUWkRhdGUgfSBmcm9tIFwiLi4vZGF0ZS9pbmRleC5qc1wiO1xuXG4vKipcbiAqIFRoZSBmdW5jdGlvbiBjcmVhdGVzIGFjY2VwdHMgYSB0aW1lIHpvbmUgYW5kIHJldHVybnMgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXNcbiAqIGEgbmV3IGBUWkRhdGVgIGluc3RhbmNlIGluIHRoZSB0aW1lIHpvbmUgZnJvbSB0aGUgcHJvdmlkZWQgdmFsdWUuIFVzZSBpdCB0b1xuICogcHJvdmlkZSB0aGUgY29udGV4dCBmb3IgdGhlIGRhdGUtZm5zIGZ1bmN0aW9ucywgdmlhIHRoZSBgaW5gIG9wdGlvbi5cbiAqXG4gKiBAcGFyYW0gdGltZVpvbmUgLSBUaW1lIHpvbmUgbmFtZSAoSUFOQSBvciBVVEMgb2Zmc2V0KVxuICpcbiAqIEByZXR1cm5zIEZ1bmN0aW9uIHRoYXQgY3JlYXRlcyBhIG5ldyBgVFpEYXRlYCBpbnN0YW5jZSBpbiB0aGUgdGltZSB6b25lXG4gKi9cbmV4cG9ydCBjb25zdCB0eiA9IHRpbWVab25lID0+IHZhbHVlID0+IFRaRGF0ZS50eih0aW1lWm9uZSwgK25ldyBEYXRlKHZhbHVlKSk7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@date-fns/tz/tz/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@date-fns/tz/tzName/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@date-fns/tz/tzName/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tzName: () => (/* binding */ tzName)\n/* harmony export */ });\n/**\n * Time zone name format.\n */\n\n/**\n * The function returns the time zone name for the given date in the specified\n * time zone.\n *\n * It uses the `Intl.DateTimeFormat` API and by default outputs the time zone\n * name in a long format, e.g. \"Pacific Standard Time\" or\n * \"Singapore Standard Time\".\n *\n * It is possible to specify the format as the third argument using one of the following options\n *\n * - \"short\": e.g. \"EDT\" or \"GMT+8\".\n * - \"long\": e.g. \"Eastern Daylight Time\".\n * - \"shortGeneric\": e.g. \"ET\" or \"Singapore Time\".\n * - \"longGeneric\": e.g. \"Eastern Time\" or \"Singapore Standard Time\".\n *\n * These options correspond to TR35 tokens `z..zzz`, `zzzz`, `v`, and `vvvv` respectively: https://www.unicode.org/reports/tr35/tr35-dates.html#dfst-zone\n *\n * @param timeZone - Time zone name (IANA or UTC offset)\n * @param date - Date object to get the time zone name for\n * @param format - Optional format of the time zone name. Defaults to \"long\". Can be \"short\", \"long\", \"shortGeneric\", or \"longGeneric\".\n *\n * @returns Time zone name (e.g. \"Singapore Standard Time\")\n */\nfunction tzName(timeZone, date, format = \"long\") {\n  return new Intl.DateTimeFormat(\"en-US\", {\n    // Enforces engine to render the time. Without the option JavaScriptCore omits it.\n    hour: \"numeric\",\n    timeZone: timeZone,\n    timeZoneName: format\n  }).format(date).split(/\\s/g) // Format.JS uses non-breaking spaces\n  .slice(2) // Skip the hour and AM/PM parts\n  .join(\" \");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L3R6TmFtZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBIiwic291cmNlcyI6WyJXOlxcVmlzdWFsIFN0dWRpbyBDb2RlXFxXZWIgc2F5dGxhclxcVXpXYXktVHVyaXptXFxmcm9udGVuZFxcbm9kZV9tb2R1bGVzXFxAZGF0ZS1mbnNcXHR6XFx0ek5hbWVcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGltZSB6b25lIG5hbWUgZm9ybWF0LlxuICovXG5cbi8qKlxuICogVGhlIGZ1bmN0aW9uIHJldHVybnMgdGhlIHRpbWUgem9uZSBuYW1lIGZvciB0aGUgZ2l2ZW4gZGF0ZSBpbiB0aGUgc3BlY2lmaWVkXG4gKiB0aW1lIHpvbmUuXG4gKlxuICogSXQgdXNlcyB0aGUgYEludGwuRGF0ZVRpbWVGb3JtYXRgIEFQSSBhbmQgYnkgZGVmYXVsdCBvdXRwdXRzIHRoZSB0aW1lIHpvbmVcbiAqIG5hbWUgaW4gYSBsb25nIGZvcm1hdCwgZS5nLiBcIlBhY2lmaWMgU3RhbmRhcmQgVGltZVwiIG9yXG4gKiBcIlNpbmdhcG9yZSBTdGFuZGFyZCBUaW1lXCIuXG4gKlxuICogSXQgaXMgcG9zc2libGUgdG8gc3BlY2lmeSB0aGUgZm9ybWF0IGFzIHRoZSB0aGlyZCBhcmd1bWVudCB1c2luZyBvbmUgb2YgdGhlIGZvbGxvd2luZyBvcHRpb25zXG4gKlxuICogLSBcInNob3J0XCI6IGUuZy4gXCJFRFRcIiBvciBcIkdNVCs4XCIuXG4gKiAtIFwibG9uZ1wiOiBlLmcuIFwiRWFzdGVybiBEYXlsaWdodCBUaW1lXCIuXG4gKiAtIFwic2hvcnRHZW5lcmljXCI6IGUuZy4gXCJFVFwiIG9yIFwiU2luZ2Fwb3JlIFRpbWVcIi5cbiAqIC0gXCJsb25nR2VuZXJpY1wiOiBlLmcuIFwiRWFzdGVybiBUaW1lXCIgb3IgXCJTaW5nYXBvcmUgU3RhbmRhcmQgVGltZVwiLlxuICpcbiAqIFRoZXNlIG9wdGlvbnMgY29ycmVzcG9uZCB0byBUUjM1IHRva2VucyBgei4uenp6YCwgYHp6enpgLCBgdmAsIGFuZCBgdnZ2dmAgcmVzcGVjdGl2ZWx5OiBodHRwczovL3d3dy51bmljb2RlLm9yZy9yZXBvcnRzL3RyMzUvdHIzNS1kYXRlcy5odG1sI2Rmc3Qtem9uZVxuICpcbiAqIEBwYXJhbSB0aW1lWm9uZSAtIFRpbWUgem9uZSBuYW1lIChJQU5BIG9yIFVUQyBvZmZzZXQpXG4gKiBAcGFyYW0gZGF0ZSAtIERhdGUgb2JqZWN0IHRvIGdldCB0aGUgdGltZSB6b25lIG5hbWUgZm9yXG4gKiBAcGFyYW0gZm9ybWF0IC0gT3B0aW9uYWwgZm9ybWF0IG9mIHRoZSB0aW1lIHpvbmUgbmFtZS4gRGVmYXVsdHMgdG8gXCJsb25nXCIuIENhbiBiZSBcInNob3J0XCIsIFwibG9uZ1wiLCBcInNob3J0R2VuZXJpY1wiLCBvciBcImxvbmdHZW5lcmljXCIuXG4gKlxuICogQHJldHVybnMgVGltZSB6b25lIG5hbWUgKGUuZy4gXCJTaW5nYXBvcmUgU3RhbmRhcmQgVGltZVwiKVxuICovXG5leHBvcnQgZnVuY3Rpb24gdHpOYW1lKHRpbWVab25lLCBkYXRlLCBmb3JtYXQgPSBcImxvbmdcIikge1xuICByZXR1cm4gbmV3IEludGwuRGF0ZVRpbWVGb3JtYXQoXCJlbi1VU1wiLCB7XG4gICAgLy8gRW5mb3JjZXMgZW5naW5lIHRvIHJlbmRlciB0aGUgdGltZS4gV2l0aG91dCB0aGUgb3B0aW9uIEphdmFTY3JpcHRDb3JlIG9taXRzIGl0LlxuICAgIGhvdXI6IFwibnVtZXJpY1wiLFxuICAgIHRpbWVab25lOiB0aW1lWm9uZSxcbiAgICB0aW1lWm9uZU5hbWU6IGZvcm1hdFxuICB9KS5mb3JtYXQoZGF0ZSkuc3BsaXQoL1xccy9nKSAvLyBGb3JtYXQuSlMgdXNlcyBub24tYnJlYWtpbmcgc3BhY2VzXG4gIC5zbGljZSgyKSAvLyBTa2lwIHRoZSBob3VyIGFuZCBBTS9QTSBwYXJ0c1xuICAuam9pbihcIiBcIik7XG59Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@date-fns/tz/tzName/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@date-fns/tz/tzOffset/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@date-fns/tz/tzOffset/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tzOffset: () => (/* binding */ tzOffset)\n/* harmony export */ });\nconst offsetFormatCache = {};\nconst offsetCache = {};\n\n/**\n * The function extracts UTC offset in minutes from the given date in specified\n * time zone.\n *\n * Unlike `Date.prototype.getTimezoneOffset`, this function returns the value\n * mirrored to the sign of the offset in the time zone. For Asia/Singapore\n * (UTC+8), `tzOffset` returns 480, while `getTimezoneOffset` returns -480.\n *\n * @param timeZone - Time zone name (IANA or UTC offset)\n * @param date - Date to check the offset for\n *\n * @returns UTC offset in minutes\n */\nfunction tzOffset(timeZone, date) {\n  try {\n    const format = offsetFormatCache[timeZone] ||= new Intl.DateTimeFormat(\"en-US\", {\n      timeZone,\n      timeZoneName: \"longOffset\"\n    }).format;\n    const offsetStr = format(date).split(\"GMT\")[1];\n    if (offsetStr in offsetCache) return offsetCache[offsetStr];\n    return calcOffset(offsetStr, offsetStr.split(\":\"));\n  } catch {\n    // Fallback to manual parsing if the runtime doesn't support ±HH:MM/±HHMM/±HH\n    // See: https://github.com/nodejs/node/issues/53419\n    if (timeZone in offsetCache) return offsetCache[timeZone];\n    const captures = timeZone?.match(offsetRe);\n    if (captures) return calcOffset(timeZone, captures.slice(1));\n    return NaN;\n  }\n}\nconst offsetRe = /([+-]\\d\\d):?(\\d\\d)?/;\nfunction calcOffset(cacheStr, values) {\n  const hours = +(values[0] || 0);\n  const minutes = +(values[1] || 0);\n  return offsetCache[cacheStr] = hours > 0 ? hours * 60 + minutes : hours * 60 - minutes;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L3R6T2Zmc2V0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiVzpcXFZpc3VhbCBTdHVkaW8gQ29kZVxcV2ViIHNheXRsYXJcXFV6V2F5LVR1cml6bVxcZnJvbnRlbmRcXG5vZGVfbW9kdWxlc1xcQGRhdGUtZm5zXFx0elxcdHpPZmZzZXRcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG9mZnNldEZvcm1hdENhY2hlID0ge307XG5jb25zdCBvZmZzZXRDYWNoZSA9IHt9O1xuXG4vKipcbiAqIFRoZSBmdW5jdGlvbiBleHRyYWN0cyBVVEMgb2Zmc2V0IGluIG1pbnV0ZXMgZnJvbSB0aGUgZ2l2ZW4gZGF0ZSBpbiBzcGVjaWZpZWRcbiAqIHRpbWUgem9uZS5cbiAqXG4gKiBVbmxpa2UgYERhdGUucHJvdG90eXBlLmdldFRpbWV6b25lT2Zmc2V0YCwgdGhpcyBmdW5jdGlvbiByZXR1cm5zIHRoZSB2YWx1ZVxuICogbWlycm9yZWQgdG8gdGhlIHNpZ24gb2YgdGhlIG9mZnNldCBpbiB0aGUgdGltZSB6b25lLiBGb3IgQXNpYS9TaW5nYXBvcmVcbiAqIChVVEMrOCksIGB0ek9mZnNldGAgcmV0dXJucyA0ODAsIHdoaWxlIGBnZXRUaW1lem9uZU9mZnNldGAgcmV0dXJucyAtNDgwLlxuICpcbiAqIEBwYXJhbSB0aW1lWm9uZSAtIFRpbWUgem9uZSBuYW1lIChJQU5BIG9yIFVUQyBvZmZzZXQpXG4gKiBAcGFyYW0gZGF0ZSAtIERhdGUgdG8gY2hlY2sgdGhlIG9mZnNldCBmb3JcbiAqXG4gKiBAcmV0dXJucyBVVEMgb2Zmc2V0IGluIG1pbnV0ZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHR6T2Zmc2V0KHRpbWVab25lLCBkYXRlKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgZm9ybWF0ID0gb2Zmc2V0Rm9ybWF0Q2FjaGVbdGltZVpvbmVdIHx8PSBuZXcgSW50bC5EYXRlVGltZUZvcm1hdChcImVuLVVTXCIsIHtcbiAgICAgIHRpbWVab25lLFxuICAgICAgdGltZVpvbmVOYW1lOiBcImxvbmdPZmZzZXRcIlxuICAgIH0pLmZvcm1hdDtcbiAgICBjb25zdCBvZmZzZXRTdHIgPSBmb3JtYXQoZGF0ZSkuc3BsaXQoXCJHTVRcIilbMV07XG4gICAgaWYgKG9mZnNldFN0ciBpbiBvZmZzZXRDYWNoZSkgcmV0dXJuIG9mZnNldENhY2hlW29mZnNldFN0cl07XG4gICAgcmV0dXJuIGNhbGNPZmZzZXQob2Zmc2V0U3RyLCBvZmZzZXRTdHIuc3BsaXQoXCI6XCIpKTtcbiAgfSBjYXRjaCB7XG4gICAgLy8gRmFsbGJhY2sgdG8gbWFudWFsIHBhcnNpbmcgaWYgdGhlIHJ1bnRpbWUgZG9lc24ndCBzdXBwb3J0IMKxSEg6TU0vwrFISE1NL8KxSEhcbiAgICAvLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9ub2RlanMvbm9kZS9pc3N1ZXMvNTM0MTlcbiAgICBpZiAodGltZVpvbmUgaW4gb2Zmc2V0Q2FjaGUpIHJldHVybiBvZmZzZXRDYWNoZVt0aW1lWm9uZV07XG4gICAgY29uc3QgY2FwdHVyZXMgPSB0aW1lWm9uZT8ubWF0Y2gob2Zmc2V0UmUpO1xuICAgIGlmIChjYXB0dXJlcykgcmV0dXJuIGNhbGNPZmZzZXQodGltZVpvbmUsIGNhcHR1cmVzLnNsaWNlKDEpKTtcbiAgICByZXR1cm4gTmFOO1xuICB9XG59XG5jb25zdCBvZmZzZXRSZSA9IC8oWystXVxcZFxcZCk6PyhcXGRcXGQpPy87XG5mdW5jdGlvbiBjYWxjT2Zmc2V0KGNhY2hlU3RyLCB2YWx1ZXMpIHtcbiAgY29uc3QgaG91cnMgPSArKHZhbHVlc1swXSB8fCAwKTtcbiAgY29uc3QgbWludXRlcyA9ICsodmFsdWVzWzFdIHx8IDApO1xuICByZXR1cm4gb2Zmc2V0Q2FjaGVbY2FjaGVTdHJdID0gaG91cnMgPiAwID8gaG91cnMgKiA2MCArIG1pbnV0ZXMgOiBob3VycyAqIDYwIC0gbWludXRlcztcbn0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@date-fns/tz/tzOffset/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@date-fns/tz/tzScan/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@date-fns/tz/tzScan/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tzScan: () => (/* binding */ tzScan)\n/* harmony export */ });\n/* harmony import */ var _tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tzOffset/index.js */ \"(ssr)/./node_modules/@date-fns/tz/tzOffset/index.js\");\n\n\n/**\n * Time interval.\n */\n\n/**\n * Time zone change record.\n */\n\n/**\n * The function scans the time zone for changes in the given interval.\n *\n * @param timeZone - Time zone name (IANA or UTC offset)\n * @param interval - Time interval to scan for changes\n *\n * @returns Array of time zone changes\n */\nfunction tzScan(timeZone, interval) {\n  const changes = [];\n  const monthDate = new Date(interval.start);\n  monthDate.setUTCSeconds(0, 0);\n  const endDate = new Date(interval.end);\n  endDate.setUTCSeconds(0, 0);\n  const endMonthTime = +endDate;\n  let lastOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, monthDate);\n  while (+monthDate < endMonthTime) {\n    // Month forward\n    monthDate.setUTCMonth(monthDate.getUTCMonth() + 1);\n\n    // Find the month where the offset changes\n    const offset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, monthDate);\n    if (offset != lastOffset) {\n      // Rewind a month back to find the day where the offset changes\n      const dayDate = new Date(monthDate);\n      dayDate.setUTCMonth(dayDate.getUTCMonth() - 1);\n      const endDayTime = +monthDate;\n      lastOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, dayDate);\n      while (+dayDate < endDayTime) {\n        // Day forward\n        dayDate.setUTCDate(dayDate.getUTCDate() + 1);\n\n        // Find the day where the offset changes\n        const offset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, dayDate);\n        if (offset != lastOffset) {\n          // Rewind a day back to find the time where the offset changes\n          const hourDate = new Date(dayDate);\n          hourDate.setUTCDate(hourDate.getUTCDate() - 1);\n          const endHourTime = +dayDate;\n          lastOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, hourDate);\n          while (+hourDate < endHourTime) {\n            // Hour forward\n            hourDate.setUTCHours(hourDate.getUTCHours() + 1);\n\n            // Find the hour where the offset changes\n            const hourOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, hourDate);\n            if (hourOffset !== lastOffset) {\n              changes.push({\n                date: new Date(hourDate),\n                change: hourOffset - lastOffset,\n                offset: hourOffset\n              });\n            }\n            lastOffset = hourOffset;\n          }\n        }\n        lastOffset = offset;\n      }\n    }\n    lastOffset = offset;\n  }\n  return changes;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L3R6U2Nhbi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnRDs7QUFFaEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsNERBQVE7QUFDM0I7QUFDQTtBQUNBOztBQUVBO0FBQ0EsbUJBQW1CLDREQUFRO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsNERBQVE7QUFDM0I7QUFDQTtBQUNBOztBQUVBO0FBQ0EsdUJBQXVCLDREQUFRO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsNERBQVE7QUFDL0I7QUFDQTtBQUNBOztBQUVBO0FBQ0EsK0JBQStCLDREQUFRO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiVzpcXFZpc3VhbCBTdHVkaW8gQ29kZVxcV2ViIHNheXRsYXJcXFV6V2F5LVR1cml6bVxcZnJvbnRlbmRcXG5vZGVfbW9kdWxlc1xcQGRhdGUtZm5zXFx0elxcdHpTY2FuXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0ek9mZnNldCB9IGZyb20gXCIuLi90ek9mZnNldC9pbmRleC5qc1wiO1xuXG4vKipcbiAqIFRpbWUgaW50ZXJ2YWwuXG4gKi9cblxuLyoqXG4gKiBUaW1lIHpvbmUgY2hhbmdlIHJlY29yZC5cbiAqL1xuXG4vKipcbiAqIFRoZSBmdW5jdGlvbiBzY2FucyB0aGUgdGltZSB6b25lIGZvciBjaGFuZ2VzIGluIHRoZSBnaXZlbiBpbnRlcnZhbC5cbiAqXG4gKiBAcGFyYW0gdGltZVpvbmUgLSBUaW1lIHpvbmUgbmFtZSAoSUFOQSBvciBVVEMgb2Zmc2V0KVxuICogQHBhcmFtIGludGVydmFsIC0gVGltZSBpbnRlcnZhbCB0byBzY2FuIGZvciBjaGFuZ2VzXG4gKlxuICogQHJldHVybnMgQXJyYXkgb2YgdGltZSB6b25lIGNoYW5nZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHR6U2Nhbih0aW1lWm9uZSwgaW50ZXJ2YWwpIHtcbiAgY29uc3QgY2hhbmdlcyA9IFtdO1xuICBjb25zdCBtb250aERhdGUgPSBuZXcgRGF0ZShpbnRlcnZhbC5zdGFydCk7XG4gIG1vbnRoRGF0ZS5zZXRVVENTZWNvbmRzKDAsIDApO1xuICBjb25zdCBlbmREYXRlID0gbmV3IERhdGUoaW50ZXJ2YWwuZW5kKTtcbiAgZW5kRGF0ZS5zZXRVVENTZWNvbmRzKDAsIDApO1xuICBjb25zdCBlbmRNb250aFRpbWUgPSArZW5kRGF0ZTtcbiAgbGV0IGxhc3RPZmZzZXQgPSB0ek9mZnNldCh0aW1lWm9uZSwgbW9udGhEYXRlKTtcbiAgd2hpbGUgKCttb250aERhdGUgPCBlbmRNb250aFRpbWUpIHtcbiAgICAvLyBNb250aCBmb3J3YXJkXG4gICAgbW9udGhEYXRlLnNldFVUQ01vbnRoKG1vbnRoRGF0ZS5nZXRVVENNb250aCgpICsgMSk7XG5cbiAgICAvLyBGaW5kIHRoZSBtb250aCB3aGVyZSB0aGUgb2Zmc2V0IGNoYW5nZXNcbiAgICBjb25zdCBvZmZzZXQgPSB0ek9mZnNldCh0aW1lWm9uZSwgbW9udGhEYXRlKTtcbiAgICBpZiAob2Zmc2V0ICE9IGxhc3RPZmZzZXQpIHtcbiAgICAgIC8vIFJld2luZCBhIG1vbnRoIGJhY2sgdG8gZmluZCB0aGUgZGF5IHdoZXJlIHRoZSBvZmZzZXQgY2hhbmdlc1xuICAgICAgY29uc3QgZGF5RGF0ZSA9IG5ldyBEYXRlKG1vbnRoRGF0ZSk7XG4gICAgICBkYXlEYXRlLnNldFVUQ01vbnRoKGRheURhdGUuZ2V0VVRDTW9udGgoKSAtIDEpO1xuICAgICAgY29uc3QgZW5kRGF5VGltZSA9ICttb250aERhdGU7XG4gICAgICBsYXN0T2Zmc2V0ID0gdHpPZmZzZXQodGltZVpvbmUsIGRheURhdGUpO1xuICAgICAgd2hpbGUgKCtkYXlEYXRlIDwgZW5kRGF5VGltZSkge1xuICAgICAgICAvLyBEYXkgZm9yd2FyZFxuICAgICAgICBkYXlEYXRlLnNldFVUQ0RhdGUoZGF5RGF0ZS5nZXRVVENEYXRlKCkgKyAxKTtcblxuICAgICAgICAvLyBGaW5kIHRoZSBkYXkgd2hlcmUgdGhlIG9mZnNldCBjaGFuZ2VzXG4gICAgICAgIGNvbnN0IG9mZnNldCA9IHR6T2Zmc2V0KHRpbWVab25lLCBkYXlEYXRlKTtcbiAgICAgICAgaWYgKG9mZnNldCAhPSBsYXN0T2Zmc2V0KSB7XG4gICAgICAgICAgLy8gUmV3aW5kIGEgZGF5IGJhY2sgdG8gZmluZCB0aGUgdGltZSB3aGVyZSB0aGUgb2Zmc2V0IGNoYW5nZXNcbiAgICAgICAgICBjb25zdCBob3VyRGF0ZSA9IG5ldyBEYXRlKGRheURhdGUpO1xuICAgICAgICAgIGhvdXJEYXRlLnNldFVUQ0RhdGUoaG91ckRhdGUuZ2V0VVRDRGF0ZSgpIC0gMSk7XG4gICAgICAgICAgY29uc3QgZW5kSG91clRpbWUgPSArZGF5RGF0ZTtcbiAgICAgICAgICBsYXN0T2Zmc2V0ID0gdHpPZmZzZXQodGltZVpvbmUsIGhvdXJEYXRlKTtcbiAgICAgICAgICB3aGlsZSAoK2hvdXJEYXRlIDwgZW5kSG91clRpbWUpIHtcbiAgICAgICAgICAgIC8vIEhvdXIgZm9yd2FyZFxuICAgICAgICAgICAgaG91ckRhdGUuc2V0VVRDSG91cnMoaG91ckRhdGUuZ2V0VVRDSG91cnMoKSArIDEpO1xuXG4gICAgICAgICAgICAvLyBGaW5kIHRoZSBob3VyIHdoZXJlIHRoZSBvZmZzZXQgY2hhbmdlc1xuICAgICAgICAgICAgY29uc3QgaG91ck9mZnNldCA9IHR6T2Zmc2V0KHRpbWVab25lLCBob3VyRGF0ZSk7XG4gICAgICAgICAgICBpZiAoaG91ck9mZnNldCAhPT0gbGFzdE9mZnNldCkge1xuICAgICAgICAgICAgICBjaGFuZ2VzLnB1c2goe1xuICAgICAgICAgICAgICAgIGRhdGU6IG5ldyBEYXRlKGhvdXJEYXRlKSxcbiAgICAgICAgICAgICAgICBjaGFuZ2U6IGhvdXJPZmZzZXQgLSBsYXN0T2Zmc2V0LFxuICAgICAgICAgICAgICAgIG9mZnNldDogaG91ck9mZnNldFxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxhc3RPZmZzZXQgPSBob3VyT2Zmc2V0O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBsYXN0T2Zmc2V0ID0gb2Zmc2V0O1xuICAgICAgfVxuICAgIH1cbiAgICBsYXN0T2Zmc2V0ID0gb2Zmc2V0O1xuICB9XG4gIHJldHVybiBjaGFuZ2VzO1xufSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@date-fns/tz/tzScan/index.js\n");

/***/ })

};
;